# -*- coding: utf-8 -*-
"""Luhn_Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hh8j76h5SDE7MeUvT4mBPAiMW6BRWaNB
"""

def Luhn(card):
    # Здесь хранится контрольная сумма
    checksum = 0
    # Номер карты переводится из строки в массив. Это нужно для дальнейшей итерации по каждой цифре
    cardnumbers = list(map(int, card))
    # Итерации по каждой цифре
    for count, num in enumerate(cardnumbers):
        # Т.к. счёт идёт с нуля, то если index чётный, значит число стоит на нечётной позиции
        if count % 2 == 0:
            buffer = num * 2
            # Если удвоенное число больше 9, то из него вычитается 9 и прибавляется к контрольной сумме
            if buffer > 9:
                buffer -= 9
            # Если нет, то сразу прибавляется к контрольной сумме
            checksum += buffer
        # Если число стоит на чётной позиции, то оно прибавляется к контрольной сумме
        else:
            checksum += num
    # Если контрольная сумма делится без остатка на 10, то номер карты правильный

    if checksum % 10 == 0:
      print(f'Номер карты {card} - корректный!')
    else:
      print(f'Номер карты {card} - некорректный!')


card = input('Введите номер карты! Номер должен состоять из 16 цифр!')

# Проверка на валидность введённого числа
if len(card) == 16 and card.isdigit() == True:
  Luhn(card)
else:
  print('Номер введён некорректно!')

